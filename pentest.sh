#!/bin/bash
# This script is a work in progress for PENETRATION TESTING
#
# usage: ./pentest.sh <IP>
# ex: ./pentest.sh 127.0.0.1

tgtip=$1

# Check if IP address is provided
if [ -z "$tgtip" ]; then
    echo "+-------------------------------------+"
    echo "| Please add a target IP to PENTEST   |"
    echo "| usage: ./pentest.sh <IP>            |"
    echo "+-------------------------------------+"
    exit 1
fi

# Check for required tools
for cmd in nmap whois dnsrecon nbtscan python3; do
    if ! command -v $cmd &> /dev/null; then
        echo "Error: $cmd is not installed. Please install it and try again."
        exit 1
    fi
done

nmap_enum() {
    echo "+-------------------------------------+"
    echo "|              NMAP / NC              |"
    echo "+-------------------------------------+"
    echo "What would you like to do?"
    echo ""
    echo "1) Standard Scan"
    echo "2) Port/Service Enum"
    echo "3) Test all ports"
    echo "0) MAIN MENU"
    echo ""
    read -p "What is your choice?: " nchoice
    echo "+-------------------------------------+"
    case "$nchoice" in
        1)
            echo "Starting: Standard Scan"
            nmap "$tgtip"
            ;;
        2)
            read -p "What Ports would you like to scan? (Ex: 22 or 22,80,4444): " nports
            echo "Starting: Port/Service Enum"
            nmap -p "$nports" -sV "$tgtip"
            ;;
        3)
            echo "Starting: Testing all ports (this may take some time)..."
            for i in {1..65536}; do
    	    (
	        echo -ne "Scanning Port: $i\r"
        	nc -zvn $tgtip $i 2>&1 | grep -v "refused"
	    ) &
	    done
	    # wait for all background processes to finish
	    wait
	    echo -e "\nScan complete."
            ;;
        0)
            return
            ;;
        *)
            echo "+-------------------------------------+"
            echo "Invalid choice, please try again."
            ;;
    esac
}

whois_enum() {
    echo "+-------------------------------------+"
    echo "|              WHOIS ENUM             |"
    echo "+-------------------------------------+"
    whois "$tgtip"
}

dnsrecon_enum() {
    echo "+-------------------------------------+"
    echo "|            DNSRECON ENUM            |"
    echo "+-------------------------------------+"
    dnsrecon -d "$tgtip" 
}

nslookup_enum() {
    echo "+-------------------------------------+"
    echo "|            NSLOOKUP ENUM            |"
    echo "+-------------------------------------+"
    echo "What type of lookup?"
    echo ""
    echo "1) Standard"
    echo "2) TXT"
    echo "3) MX"
    echo "0) MAIN MENU"
    echo ""
    read -p "Your choice: " nschoice
    echo "+-------------------------------------+"
    case "$nschoice" in
        1)
            echo "Performing Standard Lookup"
            nslookup "$tgtip"
            ;;
        2)
            echo "Performing TXT Lookup"
            nslookup -type=TXT "$tgtip"
            ;;
        3)
            echo "Performing MX Lookup"
            nslookup -type=MX "$tgtip"
            ;;
        0)
            return
            ;;
        *)
            echo "Invalid choice, please try again."
            ;;
    esac
}


smb_enum() {
    echo "+-------------------------------------+"
    echo "|             SMB ENUM                |"
    echo "+-------------------------------------+"
    echo "What would you like to do?"
    echo ""
    echo "1) nbtscan SMBscan on subnet"
    echo "2) nmap SMB OS Discovery"
    echo "3) enum4linux"
    echo "0) MAIN MENU"
    echo ""
    read -p "Your choice: " smbchoice
    echo "+-------------------------------------+"
    case "$smbchoice" in
        1)
            subnet=$(echo "$tgtip" | awk -F. '{print $1"."$2"."$3".0"}')
            echo "Scanning subnet: $subnet/24"
            sudo nbtscan -r "$subnet/24"
            ;;
        2)
            echo "Starting: Nmap SMB OS Discovery"
            nmap -p 139,445 --script smb-os-discovery "$tgtip"
            ;;
	3)
	    echo "Starting: enum4linux"
	    enum4linux $tgtip
	    ;;
        0)
            return
            ;;
        *)
            echo "Invalid choice, please try again."
            ;;
    esac
}

smtp_enum() {
    echo "+-------------------------------------+"
    echo "|             SMTP ENUM                |"
    echo "+-------------------------------------+"
    read -p "What is the user name?: " smtpusername

    # Create and write the Python script to smtp.py
    cat <<EOF > smtp.py
#!/usr/bin/python3
import socket
import sys
if len(sys.argv) != 3:
    print("Usage: smtp.py <username> <target_ip>")
    sys.exit(0)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
ip = sys.argv[2]
try:
    s.connect((ip, 25))
    banner = s.recv(1024).decode()
    print("Banner:", banner)
    user = sys.argv[1].encode()
    s.send(b'VRFY ' + user + b'\r\n')
    result = s.recv(1024).decode()
    print("Result:", result)
except Exception as e:
    print(f"Error: {e}")
finally:
    s.close()
EOF

    chmod +x smtp.py
    python3 smtp.py "$smtpusername" "$tgtip"
    rm smtp.py
}


while true; do
    echo "+-------------------------------------+"
    echo "|             PENTESTING              |"
    echo "+-------------------------------------+"
    echo "What would you like to do?"
    echo ""
    echo "1) NMAP / NC"
    echo "2) WHOIS"
    echo "3) DNSRECON"
    echo "4) NSLOOKUP"
    echo "5) SMB enum"
    echo "6) SMTP enum"
    echo "7) SNMP enum"
    echo "0) EXIT"
    echo ""
    read -p "Your choice: " mmchoice
    echo "+-------------------------------------+"
    case "$mmchoice" in
        1)
            nmap_enum
            ;;
        2)
            whois_enum
            ;;
        3)
            dnsrecon_enum
            ;;
        4)
            nslookup_enum
            ;;
        5)
            smb_enum
            ;;
        6)
            smtp_enum
            ;;
        7)
            echo "SNMP enum functionality not yet implemented."
            ;;
        0)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid choice, please try again."
            ;;
    esac
done
